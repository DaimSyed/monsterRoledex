{"version":3,"sources":["component/card/card-component.jsx","component/card-list/card-list-component.jsx","component/searchBox/searchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handler","type","onChange","App","state","searchField","a","fetch","res","json","data","this","setState","e","target","value","filtered","filter","mon","toLocaleLowerCase","includes","changeSearchField","bind","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLXC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMI,QAAQK,KAAI,SAACL,GAClB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNrBK,G,MAAY,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACvC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BDG,E,4MA/BbC,MAAQ,CACNZ,QAAS,GACTa,YAAa,I,8FAEf,8BAAAC,EAAA,sEACoBC,MAAM,8CAD1B,cACQC,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAGEC,KAAKC,SAAS,CAAEpB,QAASkB,IAH3B,gD,qFAKA,SAAkBG,GAChBF,KAAKC,SAAS,CAAEP,YAAaQ,EAAEC,OAAOC,U,oBAGxC,WACE,MAAiCJ,KAAKP,MAA9BZ,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,YACXW,EAAWxB,EAAQyB,QAAO,SAACC,GAAD,OAC9BA,EAAIxB,KAAKyB,oBAAoBC,SAASf,EAAYc,wBAEpD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,gBACZC,QAASW,KAAKU,kBAAkBC,KAAKX,QAEvC,cAAC,EAAD,CAAUnB,QAASwB,W,GA1BTO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.97499d6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-component-style.css\";\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"Monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      ></img>\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable array-callback-return */\r\nimport React from \"react\";\r\nimport \"./card-list-style.css\";\r\nimport { Card } from \"../card/card-component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monster.map((monster) => {\r\n        return <Card key={monster.id} monster={monster} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./searchBox.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handler }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handler}\r\n    />\r\n  );\r\n};\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./component/card-list/card-list-component\";\nimport { SearchBox } from \"./component/searchBox/searchBox\";\n\nclass App extends Component {\n  state = {\n    monster: [],\n    searchField: \"\",\n  };\n  async componentDidMount() {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await res.json();\n    this.setState({ monster: data });\n  }\n  changeSearchField(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monster, searchField } = this.state;\n    const filtered = monster.filter((mon) =>\n      mon.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Montser Roledex</h1>\n        <SearchBox\n          placeholder=\"SearchMonster\"\n          handler={this.changeSearchField.bind(this)}\n        />\n        <CardList monster={filtered} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}